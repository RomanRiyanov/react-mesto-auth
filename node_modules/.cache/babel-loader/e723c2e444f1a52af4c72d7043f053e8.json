{"ast":null,"code":"class Api {\n  constructor(config) {\n    this._baseUrl = config.baseUrl;\n    this._headers = config.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  setUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._checkResponse);\n  }\n\n  setUserAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(this._checkResponse);\n  }\n\n  getCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  addNewCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.place,\n        link: data.imageUrl\n      })\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  } // likeCard(id) {\n  //     return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n  //             method: 'PUT',\n  //             headers: this._headers,\n  //         })\n  //         .then(this._checkResponse)\n  //     }\n  // unLikeCard(id) {\n  //     return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n  //             method: 'DELETE',\n  //             headers: this._headers,\n  //         })\n  //         .then(this._checkResponse)\n  //     }\n\n\n  changeLikeCardStatus(id, isLiked) {\n    if (isLiked) {\n      return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n        method: 'DELETE',\n        headers: this._headers\n      }).then(this._checkResponse);\n    } else {\n      return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n        method: 'PUT',\n        headers: this._headers\n      }).then(this._checkResponse);\n    }\n  }\n\n}\n\nconst apiConfig = {\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-44',\n  headers: {\n    authorization: '6b29f5e5-c172-4a06-806f-c42366ee7092',\n    'Content-Type': 'application/json'\n  }\n};\nexport const api = new Api(apiConfig);","map":{"version":3,"names":["Api","constructor","config","_baseUrl","baseUrl","_headers","headers","_checkResponse","res","ok","json","Promise","reject","status","getUserInfo","fetch","method","then","setUserInfo","data","body","JSON","stringify","name","about","setUserAvatar","getCards","addNewCard","place","link","imageUrl","deleteCard","id","changeLikeCardStatus","isLiked","apiConfig","authorization","api"],"sources":["/Users/romansexmachine/Desktop/dev/mesto-react/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\n    constructor (config) {\n        this._baseUrl = config.baseUrl;\n        this._headers = config.headers\n    }\n\n    _checkResponse(res) {\n        if (res.ok) {\n            return res.json()\n        } else return Promise.reject(`Ошибка: ${res.status}`)\n    }\n    \n\n    getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n            method: 'GET',\n            headers: this._headers\n        })\n        .then(this._checkResponse)\n        }\n\n    setUserInfo(data) {\n        return fetch(`${this._baseUrl}/users/me`, {\n                method: 'PATCH',\n                headers: this._headers,\n                body: JSON.stringify ({\n                    name: data.name,\n                    about: data.about\n                  })\n            })\n            .then(this._checkResponse)\n        }\n\n    setUserAvatar(data) {\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\n                method: 'PATCH',\n                headers: this._headers,\n                body: JSON.stringify (data)\n            })\n            .then(this._checkResponse)\n        }\n    \n    getCards() {\n        return fetch(`${this._baseUrl}/cards`, {\n                method: 'GET',\n                headers: this._headers\n            })\n            .then(this._checkResponse)\n        }\n\n    addNewCard(data) {\n        return fetch(`${this._baseUrl}/cards`, {\n                method: 'POST',\n                headers: this._headers,\n                body: JSON.stringify ({\n                    name: data.place,\n                    link: data.imageUrl\n                    })\n            })\n            .then(this._checkResponse)\n        }\n\n    deleteCard(id) {\n        return fetch(`${this._baseUrl}/cards/${id}`, {\n                method: 'DELETE',\n                headers: this._headers,\n            })\n            .then(this._checkResponse)\n        }\n\n    // likeCard(id) {\n    //     return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n    //             method: 'PUT',\n    //             headers: this._headers,\n    //         })\n    //         .then(this._checkResponse)\n    //     }\n\n    // unLikeCard(id) {\n    //     return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n    //             method: 'DELETE',\n    //             headers: this._headers,\n    //         })\n    //         .then(this._checkResponse)\n    //     }\n\n    changeLikeCardStatus(id, isLiked) {\n        if (isLiked) {\n            return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n                method: 'DELETE',\n                headers: this._headers,\n            })\n            .then(this._checkResponse)\n        } else {\n            return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n                method: 'PUT',\n                headers: this._headers,\n            })\n            .then(this._checkResponse)\n        }\n    }\n}\n\nconst apiConfig = {\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-44',\n    headers: {\n      authorization: '6b29f5e5-c172-4a06-806f-c42366ee7092',\n      'Content-Type': 'application/json'\n    }\n  }\n  \nexport const api = new Api(apiConfig);"],"mappings":"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"},"metadata":{},"sourceType":"module"}