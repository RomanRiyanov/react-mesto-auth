{"ast":null,"code":"var _jsxFileName = \"/Users/romansexmachine/Desktop/dev/mesto-react/mesto-react/src/components/EditAvatarPopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditAvatarPopup(_ref) {\n  _s();\n\n  let {\n    isOpen,\n    onCloseButton,\n    onUpdateAvatar,\n    isLoaded\n  } = _ref;\n  const avatarInput = React.useRef();\n  const [isInputValid, setValidity] = useState(true);\n  const buttonText = isLoaded ? 'Сохранение...' : 'Сохранить';\n\n  function handleChange() {\n    setValidity(avatarInput.current.validity.valid);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    onUpdateAvatar({\n      avatar: avatarInput.current.value\n    });\n  }\n\n  useEffect(() => {\n    avatarInput.current.value = '';\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    onSubmit: handleSubmit,\n    onCloseButton: onCloseButton,\n    isOpen: isOpen,\n    isInputValid: isInputValid,\n    name: \"add-avatar\",\n    title: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n    buttonText: buttonText,\n    windowType: \"popup__window_type_avatar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChange,\n      ref: avatarInput,\n      className: \"popup__input\",\n      id: \"avatar-input\",\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043D\\u043E\\u0432\\u044B\\u0439 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n      type: \"url\",\n      name: \"avatarUrl\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `popup__input-error avatar-input-error ${isInputValid || 'popup__input-error_active'}`,\n      children: isInputValid ? '' : `${avatarInput.current.validationMessage}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditAvatarPopup, \"egMNnFclkWcRfk89qROHRMgX5jA=\");\n\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"names":["React","useEffect","useState","useContext","PopupWithForm","EditAvatarPopup","isOpen","onCloseButton","onUpdateAvatar","isLoaded","avatarInput","useRef","isInputValid","setValidity","buttonText","handleChange","current","validity","valid","handleSubmit","event","preventDefault","avatar","value","validationMessage"],"sources":["/Users/romansexmachine/Desktop/dev/mesto-react/mesto-react/src/components/EditAvatarPopup.js"],"sourcesContent":["import React, {useEffect, useState, useContext} from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup ({\n    isOpen, \n    onCloseButton, \n    onUpdateAvatar,\n    isLoaded\n}) {\n\n    const avatarInput = React.useRef();\n\n    const [isInputValid, setValidity] = useState(true);\n\n    const buttonText = isLoaded ? 'Сохранение...' : 'Сохранить';\n\n    function handleChange() {\n        setValidity(avatarInput.current.validity.valid);        \n    }\n\n    function handleSubmit (event) {\n        event.preventDefault();\n\n        onUpdateAvatar({\n            avatar: avatarInput.current.value\n        });\n    }\n\n    useEffect(() => {\n        avatarInput.current.value = '';\n    }, [isOpen])\n\n    return (\n        <PopupWithForm \n        onSubmit={handleSubmit}\n        onCloseButton = {onCloseButton} \n        isOpen={isOpen}\n        isInputValid={isInputValid}\n        name=\"add-avatar\" \n        title=\"Обновить аватар\"\n        buttonText={buttonText}\n        windowType='popup__window_type_avatar'>\n            <input onChange={handleChange} ref={avatarInput} className=\"popup__input\" id=\"avatar-input\" placeholder=\"Ссылка на новый аватар\" type=\"url\" name=\"avatarUrl\" required />\n            <span className={`popup__input-error avatar-input-error ${isInputValid || 'popup__input-error_active'}`}>\n                {isInputValid ? '' : `${avatarInput.current.validationMessage}`}\n            </span>\n        </PopupWithForm>\n    )\n}\n\nexport default EditAvatarPopup;\n\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,UAApC,QAAqD,OAArD;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,SAASC,eAAT,OAKG;EAAA;;EAAA,IALuB;IACtBC,MADsB;IAEtBC,aAFsB;IAGtBC,cAHsB;IAItBC;EAJsB,CAKvB;EAEC,MAAMC,WAAW,GAAGV,KAAK,CAACW,MAAN,EAApB;EAEA,MAAM,CAACC,YAAD,EAAeC,WAAf,IAA8BX,QAAQ,CAAC,IAAD,CAA5C;EAEA,MAAMY,UAAU,GAAGL,QAAQ,GAAG,eAAH,GAAqB,WAAhD;;EAEA,SAASM,YAAT,GAAwB;IACpBF,WAAW,CAACH,WAAW,CAACM,OAAZ,CAAoBC,QAApB,CAA6BC,KAA9B,CAAX;EACH;;EAED,SAASC,YAAT,CAAuBC,KAAvB,EAA8B;IAC1BA,KAAK,CAACC,cAAN;IAEAb,cAAc,CAAC;MACXc,MAAM,EAAEZ,WAAW,CAACM,OAAZ,CAAoBO;IADjB,CAAD,CAAd;EAGH;;EAEDtB,SAAS,CAAC,MAAM;IACZS,WAAW,CAACM,OAAZ,CAAoBO,KAApB,GAA4B,EAA5B;EACH,CAFQ,EAEN,CAACjB,MAAD,CAFM,CAAT;EAIA,oBACI,QAAC,aAAD;IACA,QAAQ,EAAEa,YADV;IAEA,aAAa,EAAIZ,aAFjB;IAGA,MAAM,EAAED,MAHR;IAIA,YAAY,EAAEM,YAJd;IAKA,IAAI,EAAC,YALL;IAMA,KAAK,EAAC,uFANN;IAOA,UAAU,EAAEE,UAPZ;IAQA,UAAU,EAAC,2BARX;IAAA,wBASI;MAAO,QAAQ,EAAEC,YAAjB;MAA+B,GAAG,EAAEL,WAApC;MAAiD,SAAS,EAAC,cAA3D;MAA0E,EAAE,EAAC,cAA7E;MAA4F,WAAW,EAAC,uHAAxG;MAAiI,IAAI,EAAC,KAAtI;MAA4I,IAAI,EAAC,WAAjJ;MAA6J,QAAQ;IAArK;MAAA;MAAA;MAAA;IAAA,QATJ,eAUI;MAAM,SAAS,EAAG,yCAAwCE,YAAY,IAAI,2BAA4B,EAAtG;MAAA,UACKA,YAAY,GAAG,EAAH,GAAS,GAAEF,WAAW,CAACM,OAAZ,CAAoBQ,iBAAkB;IADlE;MAAA;MAAA;MAAA;IAAA,QAVJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAgBH;;GA7CQnB,e;;KAAAA,e;AA+CT,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}